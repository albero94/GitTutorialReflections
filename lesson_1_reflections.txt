How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It allowed me too see just the lines that had changed and spot the bug faster.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If you need to roll back to a previous version you save plenty of time
    You don't need to keep track of differnet files with different names/dates


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are flexibility and making commits with logic relationship and comments discribing them.
    The only con is you may forget to commit but you will learn how to do it appropiately


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	Many times files will be related, like html and css files so it makes sense to be able
	to access same version at the same time instead of looking for the right version independently


How can you use the commands git log and git diff to view the history of files?

	They allow me to see list of changes, stats of those changes and compare files
	to see the exact lines that were added/deleted


How might using version control make you more confident to make changes that
could break something?

	You can always rollback and compare previous versions so you don't need to be afraid 
	of breaking things with your new changes


Now that you have your workspace set up, what do you want to try using Git for?

	Different projects I will work on, specially if they are collaborative

